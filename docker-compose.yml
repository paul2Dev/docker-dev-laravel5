
version: '3'

services:

    # PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        command: /bin/sh -c "chown -R www-data:www-data /var/www && chmod -R 755 /var/www/storage && php-fpm"
        image: app-${DOCKER_CONTAINER_NAME}
        container_name: app-${DOCKER_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - app-network

    # MySQL Service
    mysql:
        image: mysql:5.7.22
        container_name: database-mysql-${DOCKER_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata-mysql:/var/lib/mysql/
        networks:
            - app-network

    # MongoDB Service
    mongo:
        image: mongo:5.0.6-focal
        container_name: database-mongo-${DOCKER_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata-mongo:/data/db
            - configdb-mongo:/data/configdb
        ports:
            - "27017:27017"
        networks:
            - app-network

    #Mongo Express Service
    mongo-express:
        image: mongo-express:1.0.0-alpha.4
        container_name: mongoui-${DOCKER_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
            ME_CONFIG_BASICAUTH_USERNAME: admin
            ME_CONFIG_BASICAUTH_PASSWORD: admin
        depends_on:
            - mongo
        ports:
            - "8081:8081"
        networks:
            - app-network

    # Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver-${DOCKER_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

# Volumes
volumes:
    dbdata-mysql:
        driver: local
    dbdata-mongo:
        driver: local
    configdb-mongo:
        driver: local

# Networks Configuration
networks:
    app-network:
        driver: bridge
